version: "3.9"
services:
  social_net_otus_db:
    image: postgres:14.9-alpine
    container_name: social_net_otus_db
    ports:
      - "5888:5432"
    environment:
      POSTGRES_DB: social_net_otus
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Password1"
      PG_DATA: ./snap/postgres/data/pgdata
      POSTGRES_PGAUDIT_LOG: READ,WRITE
      POSTGRES_LOG_HOSTNAME: true
      POSTGRES_REPLICATION_MODE: master
      POSTGRES_REPLICATION_USER: repl_user
      POSTGRES_REPLICATION_PASSWORD: repl_password
      ALLOW_EMPTY_PASSWORD: yes
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d social_net_otus" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    volumes:
      - docker_social_net_otus_db_slave2:/var/lib/postgresql/data
    networks:
      - otus_highload
    #    command: >
    #      -c wal_level=replica
    #      -c max_wal_senders=10
    #      -c archive_mode=on
    #      -c archive_command='test ! -f /var/lib/postgresql/archive/%f && cp %p /var/lib/postgresql/archive/%f'



  sno_db_slave1:
    image: postgres:14.9-alpine
    container_name: sno_db_slave1
    ports:
      - "5889:5432"
    environment:
      POSTGRES_DB: social_net_otus
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Password1"
      PG_DATA: ./snap/postgres/data/
    #      POSTGRES_MASTER_HOST: social_net_otus_db
    #      POSTGRES_PGAUDIT_LOG: READ,WRITE
    #      POSTGRES_LOG_HOSTNAME: true
    #      POSTGRES_REPLICATION_MODE: slave
    #      POSTGRES_REPLICATION_USER: repl_user
    #      POSTGRES_REPLICATION_PASSWORD: repl_password
    #      POSTGRES_MASTER_PORT_NUMBER: 5432
    command: [ "postgres", "-c", "hot_standby=on" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d social_net_otus" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    volumes:
      - docker_social_net_otus_db_slave1:/var/lib/postgresql/data
    #      - ./bask/*:/backup:ro
    networks:
      - otus_highload
    depends_on:
      - social_net_otus_db
    #    entrypoint: ["/bin/sh", "-c", "cp -r /backup/* /var/lib/postgresql/data/ && exec docker-entrypoint.sh postgres"]

  sno_db_slave2:
    image: postgres:14.9-alpine
    container_name: sno_db_slave2
    ports:
      - "5890:5432"
    environment:
      POSTGRES_DB: social_net_otus
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Password1"
      PG_DATA: ./snap/postgres/data/pgdata
    #        POSTGRES_MASTER_HOST: social_net_otus_db
    #        POSTGRES_PGAUDIT_LOG: READ,WRITE
    #        POSTGRES_LOG_HOSTNAME: true
    #        POSTGRES_REPLICATION_MODE: slave
    #        POSTGRES_REPLICATION_USER: repl_user
    #        POSTGRES_REPLICATION_PASSWORD: repl_password
    #        POSTGRES_MASTER_PORT_NUMBER: 5432
    command: [ "postgres", "-c", "hot_standby=on" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d social_net_otus" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    volumes:
      - docker_social_net_otus_db_slave2
    networks:
      - otus_highload
    depends_on:
      - social_net_otus_db
  #      entrypoint: [ "/bin/sh", "-c", "cp -r /backup/* /var/lib/postgresql/data/ && exec docker-entrypoint.sh postgres" ]
  pgpool:
    image: bitnami/pgpool:latest
    container_name: pgpool
    environment:
      PGPOOL_BACKEND_NODES: "0:social_net_otus_db:5432,1:sno_db_slave1:5432,2:sno_db_slave2:5432"
      PGPOOL_POSTGRES_USERNAME: postgres
      PGPOOL_POSTGRES_PASSWORD: example
      PGPOOL_ENABLE_LOAD_BALANCING: "true"
      PGPOOL_ENABLE_STATEMENT_LOAD_BALANCING: "true"
    ports:
      - "5433:5432"
    depends_on:
      - social_net_otus_db
      - sno_db_slave1
      - sno_db_slave2
    networks:
      - otus_highload
  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:Password1@social_net_otus_db:5432/social_net_otus?sslmode=disable"
      PG_ENABLE_METRICS: 1
      PG_ENABLE_CONNECTION_STATS: 1
      PG_ENABLE_BACKEND_STATS: 1
      PG_ENABLE_TABLE_STATS: 1
      PG_ENABLE_LOCK_STATS: 1
      PG_ENABLE_WAIT_EVENT_STATS: 1
      PG_ENABLE_INDEX_STATS: 1
      PG_ENABLE_FSM_STATS: 1
      PG_ENABLE_VACUUM_STATS: 1
      PG_ENABLE_BUFFER_STATS: 1
      PG_ENABLE_ARCHIVER_STATS: 1
      PG_ENABLE_SUBSCRIPTION_STATS: 1
      PG_ENABLE_TABLESPACE_STATS: 1
      PG_ENABLE_USER_STATS: 1

    ports:
      - "9187:9187"
    networks:
      - otus_highload


  postgres_exporter1:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter1
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:Password1@sno_db_slave1:5432/social_net_otus?sslmode=disable"
      PG_ENABLE_METRICS: 1
      PG_ENABLE_CONNECTION_STATS: 1
      PG_ENABLE_BACKEND_STATS: 1
      PG_ENABLE_TABLE_STATS: 1
      PG_ENABLE_LOCK_STATS: 1
      PG_ENABLE_WAIT_EVENT_STATS: 1
      PG_ENABLE_INDEX_STATS: 1
      PG_ENABLE_FSM_STATS: 1
      PG_ENABLE_VACUUM_STATS: 1
      PG_ENABLE_BUFFER_STATS: 1
      PG_ENABLE_ARCHIVER_STATS: 1
      PG_ENABLE_SUBSCRIPTION_STATS: 1
      PG_ENABLE_TABLESPACE_STATS: 1
      PG_ENABLE_USER_STATS: 1
    ports:
      - "9188:9187"
    networks:
      - otus_highload

  postgres_exporter2:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter2
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:Password1@sno_db_slave2:5432/social_net_otus?sslmode=disable"
      PG_ENABLE_METRICS: 1
      PG_ENABLE_CONNECTION_STATS: 1
      PG_ENABLE_BACKEND_STATS: 1
      PG_ENABLE_TABLE_STATS: 1
      PG_ENABLE_LOCK_STATS: 1
      PG_ENABLE_WAIT_EVENT_STATS: 1
      PG_ENABLE_INDEX_STATS: 1
      PG_ENABLE_FSM_STATS: 1
      PG_ENABLE_VACUUM_STATS: 1
      PG_ENABLE_BUFFER_STATS: 1
      PG_ENABLE_ARCHIVER_STATS: 1
      PG_ENABLE_SUBSCRIPTION_STATS: 1
      PG_ENABLE_TABLESPACE_STATS: 1
      PG_ENABLE_USER_STATS: 1
    ports:
      - "9189:9187"
    networks:
      - otus_highload

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - otus_highload

volumes:
  docker_social_net_otus:
    external: true
  docker_social_net_otus_db_slave1:
    external: true
  docker_social_net_otus_db_slave2:
    external: true

networks:
  otus_highload:
    driver: bridge