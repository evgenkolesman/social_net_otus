version: "3.9"
services:
  social_net_otus_db:
    image: postgres:14.9-alpine
    container_name: social_net_otus_db
    ports:
      - "5888:5432"
    environment:
      POSTGRES_DB: social_net_otus
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Password1"
      PG_DATA: ./snap/postgres/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d social_net_otus" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    volumes:
      - social_net_otus:/var/lib/postgresql/data
    networks:
      - otus_highload
#    command: >
#      -c wal_level=replica
#      -c max_wal_senders=10
#      -c archive_mode=on
#      -c archive_command='test ! -f /var/lib/postgresql/archive/%f && cp %p /var/lib/postgresql/archive/%f'

  sno_db_slave1:
    image: postgres:14.9-alpine
    container_name: sno_db_slave1
    ports:
      - "5889:5432"
    environment:
      POSTGRES_DB: social_net_otus
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Password1"
      PG_DATA: ./snap/postgres/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d social_net_otus" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    volumes:
      - social_net_otus_db_slave1:/var/lib/postgresql/data
#      - ./bask/*:/backup:ro
    networks:
      - otus_highload
    depends_on:
      - social_net_otus_db
#    entrypoint: ["/bin/sh", "-c", "cp -r /backup/* /var/lib/postgresql/data/ && exec docker-entrypoint.sh postgres"]

  sno_db_slave2:
      image: postgres:14.9-alpine
      container_name: sno_db_slave2
      ports:
        - "5890:5432"
      environment:
        POSTGRES_DB: social_net_otus
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: "Password1"
        PG_DATA: ./snap/postgres/data/pgdata
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres -d social_net_otus" ]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
      restart: unless-stopped
      deploy:
        resources:
          limits:
            cpus: '1'
            memory: 1G
      volumes:
        - social_net_otus_db_slave2:/var/lib/postgresql/data
      networks:
        - otus_highload
      depends_on:
        - social_net_otus_db
#      entrypoint: [ "/bin/sh", "-c", "cp -r /backup/* /var/lib/postgresql/data/ && exec docker-entrypoint.sh postgres" ]

  social_net_otus:
    container_name: socialnetotus
    build:
      context: ..
    restart: always
    ports:
      - 9081:8080
    depends_on:
      - social_net_otus_db
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      db.schema: social_net_otus
    #    healthcheck:
    #      test: [ "CMD", "wget http://localhost:9081/actuator/health | grep UP" ]
    #      interval: 20s
    #      timeout: 5s
    #      retries: 5
    #      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    volumes:
      - "./application-docker.yml:/opt/social_net_otus/application.yml"
    networks:
      - otus_highload

  ab_tester:
    container_name: ab_tester
    build:
      context: ./Ab
    ports:
      - "8888:8888"
    depends_on:
      - social_net_otus
    networks:
      - otus_highload



  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Конфигурационный файл
      - prometheus_data:/prometheus  # Volume для данных
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'  # Указание конфигурационного файла
    ports:
      - "9090:9090"  # Проброс порта
    networks:
      - otus_highload

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3020:3000"
    networks:
      - otus_highload


  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:Password1@social_net_otus_db:5432/social_net_otus?sslmode=disable"
      PG_ENABLE_METRICS: 1
      PG_ENABLE_CONNECTION_STATS: 1
      PG_ENABLE_BACKEND_STATS: 1
      PG_ENABLE_TABLE_STATS: 1
      PG_ENABLE_LOCK_STATS: 1
      PG_ENABLE_WAIT_EVENT_STATS: 1
      PG_ENABLE_INDEX_STATS: 1
      PG_ENABLE_FSM_STATS: 1
      PG_ENABLE_VACUUM_STATS: 1
      PG_ENABLE_BUFFER_STATS: 1
      PG_ENABLE_ARCHIVER_STATS: 1
      PG_ENABLE_SUBSCRIPTION_STATS: 1
      PG_ENABLE_TABLESPACE_STATS: 1
      PG_ENABLE_USER_STATS: 1

    ports:
      - "9187:9187"
    networks:
      - otus_highload


  postgres_exporter1:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter1
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:Password1@sno_db_slave1:5432/social_net_otus?sslmode=disable"
      PG_ENABLE_METRICS: 1
      PG_ENABLE_CONNECTION_STATS: 1
      PG_ENABLE_BACKEND_STATS: 1
      PG_ENABLE_TABLE_STATS: 1
      PG_ENABLE_LOCK_STATS: 1
      PG_ENABLE_WAIT_EVENT_STATS: 1
      PG_ENABLE_INDEX_STATS: 1
      PG_ENABLE_FSM_STATS: 1
      PG_ENABLE_VACUUM_STATS: 1
      PG_ENABLE_BUFFER_STATS: 1
      PG_ENABLE_ARCHIVER_STATS: 1
      PG_ENABLE_SUBSCRIPTION_STATS: 1
      PG_ENABLE_TABLESPACE_STATS: 1
      PG_ENABLE_USER_STATS: 1
    ports:
      - "9188:9187"
    networks:
      - otus_highload

  postgres_exporter2:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter2
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:Password1@sno_db_slave2:5432/social_net_otus?sslmode=disable"
      PG_ENABLE_METRICS: 1
      PG_ENABLE_CONNECTION_STATS: 1
      PG_ENABLE_BACKEND_STATS: 1
      PG_ENABLE_TABLE_STATS: 1
      PG_ENABLE_LOCK_STATS: 1
      PG_ENABLE_WAIT_EVENT_STATS: 1
      PG_ENABLE_INDEX_STATS: 1
      PG_ENABLE_FSM_STATS: 1
      PG_ENABLE_VACUUM_STATS: 1
      PG_ENABLE_BUFFER_STATS: 1
      PG_ENABLE_ARCHIVER_STATS: 1
      PG_ENABLE_SUBSCRIPTION_STATS: 1
      PG_ENABLE_TABLESPACE_STATS: 1
      PG_ENABLE_USER_STATS: 1
    ports:
      - "9189:9187"
    networks:
      - otus_highload

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - otus_highload


volumes:
  social_net_otus:
    external: false
  social_net_otus_db_slave1:
    external: false
  social_net_otus_db_slave2:
    external: false
  grafana:
      external: false
  prometheus_data:
      external: false
#  prometheus:
#    external: false

networks:
  otus_highload:
    driver: bridge
