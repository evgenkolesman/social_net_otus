spring:
  application:
    name: socialnetotus
  cache:
    type: caffeine
  datasource:
    url: jdbc:postgresql://haproxy:5432/social_net_otus?currentSchema=${db.schema}
    username: "postgres"
    password: "Password1"
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-init-sql: CREATE SCHEMA IF NOT EXISTS ${db.schema};

#    master:
#      url: jdbc:postgresql://social_net_otus_db:5432/social_net_otus?currentSchema=${db.schema}
#      username: "postgres"
#      password: "Password1"
#      driver-class-name: org.postgresql.Driver
#      hikari:
#        connection-init-sql: CREATE SCHEMA IF NOT EXISTS ${db.schema}
#    replicas:
#      - url: jdbc:postgresql://sno_db_slave1:5432/social_net_otus?currentSchema=${db.schema}
#        username: "postgres"
#        password: "Password1"
#        driver-class-name: org.postgresql.Driver
#      - url: jdbc:postgresql://sno_db_slave2:5432/social_net_otus?currentSchema=${db.schema}
#        username: "postgres"
#        password: "Password1"
#        driver-class-name: org.postgresql.Driver

rsa:
  private-key: classpath:private-key.pem
  public-key: classpath:public-key.pem

springdoc:
  api-docs:
    path: "/api-docs"
  swagger-ui:
    url: "/openapi.yml"

management:
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
    enable:
      jvm: true
      jdbc: true
      hikaricp: true
      web: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

server:
  tomcat:
    connection-timeout: 40000
    max-threads: 200
    min-spare-threads: 20
